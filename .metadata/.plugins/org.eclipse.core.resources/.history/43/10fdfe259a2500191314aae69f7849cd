package completeExample;

public class LinkedList {
Node root;
int size;

public LinkedList() {
root = null;
size = 0;
}

// Test code - main function
public static void main(String[] args) {
LinkedList ll = new LinkedList();
System.out.println(ll.getSize());
ll.add(8);
System.out.println(ll.getSize());
ll.add(17);
ll.add(5);
ll.add(10);
System.out.println(ll.find(17).getData());
System.out.println(ll.find(0));
ll.remove(10);
System.out.println(ll.getSize());
System.out.println(ll.find(5));
System.out.println(ll.find(10));
}

public void setSize(int s) {
this.size = s;
}

public int getSize() {
return this.size;
}

public Node add(int data) {
Node newNode = new Node(data, root);
this.root = newNode;
this.size++;
return newNode;
}

public Node find(int data) {
Node current = this.root;

while (current != null) {
if (current.getData() == data)
return current;
current = current.getNextNode();
}
return null;
}

public boolean remove(int data) {
Node current = this.root;
Node prevNode = null;

while (current != null) {
if (current.getData() == data) {
if (prevNode != null)
prevNode.setNextNode(current.getNextNode());
else
this.root = current.getNextNode();
this.setSize(this.getSize() - 1);
return true;
}
prevNode = current;
current = current.getNextNode();
}
return false;
}

// Node class
private class Node {
private Node nextNode;
private int data;

// 0-arg constructor, 1-arg constructor, 2-arg constructor
private Node() {
}

private Node(int val) {
data = val;
}

private Node(int val, Node next) {
data = val;
nextNode = next;
}

private void setData(int val) {
this.data = val;
}

private int getData() {
return this.data;
}

private void setNextNode(Node n) {
this.nextNode = n;
}

private Node getNextNode() {
return this.nextNode;
}
}
}
