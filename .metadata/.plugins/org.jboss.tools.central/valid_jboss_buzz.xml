<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Infinispan Spring Boot Starter 2.1.3.Final is out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1LspobqB3RA/infinispan-spring-boot-starter-213final.html" /><category term="9.4.6.Final" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="minor release" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="spring-boot" scheme="searchisko:content:tags" /><category term="spring-boot starters" scheme="searchisko:content:tags" /><author><name>Katia Aresti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_spring_boot_starter_2_1_3_final_is_out</id><updated>2019-01-31T16:55:10Z</updated><published>2019-01-31T16:55:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Dear Infinispan and Spring Boot users,&lt;br /&gt;&lt;br /&gt;We have just released&amp;nbsp;&lt;a href="https://github.com/infinispan/infinispan-spring-boot" target="_blank"&gt;Infinispan Spring Boot&lt;/a&gt;&amp;nbsp;&lt;b&gt;2.1.3.Final&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;2.1.3.Final&lt;/b&gt;&amp;nbsp;is using &lt;b&gt;the last Infinispan Release 9.4.6.Final&lt;/b&gt;&amp;nbsp;and contains some bug fixes related to Actuator integration.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;You can find this release in the maven central repository.&lt;br /&gt;&lt;br /&gt;Please report any issues in our&amp;nbsp;&lt;a href="https://issues.jboss.org/projects/ISPN"&gt;issue tracker&lt;/a&gt;&amp;nbsp;and join the conversation in our&amp;nbsp;&lt;a href="https://infinispan.zulipchat.com/"&gt;Zulip Chat&lt;/a&gt;&amp;nbsp;to shape up our next release.&lt;br /&gt;&lt;br /&gt;Enjoy,&lt;br /&gt;&lt;br /&gt;The Infinispan Team&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/KzhCNHRST8A" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1LspobqB3RA" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan and Spring Boot users, We have just released Infinispan Spring Boot 2.1.3.Final. 2.1.3.Final is using the last Infinispan Release 9.4.6.Final and contains some bug fixes related to Actuator integration. You can find this release in the maven central repository. Please report any issues in our issue tracker and join the conversation in our Zulip Chat to shape up our next release. En...</summary><dc:creator>Katia Aresti</dc:creator><dc:date>2019-01-31T16:55:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/KzhCNHRST8A/infinispan-spring-boot-starter-213final.html</feedburner:origLink></entry><entry><title>IoT edge development and deployment with containers through OpenShift: Part 1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5vADJZvMDfs/" /><category term="CI/CD" /><category term="Cloud" /><category term="Containers" /><category term="Internet of Things" /><category term="Kubernetes" /><category term="OpenShift" /><category term="Red Hat Enterprise Linux" /><category term="Red Hat OpenShift Container Platform" /><category term="containers" /><category term="edge deployment" /><category term="edge development" /><category term="gateway" /><category term="kubernetes" /><category term="OpenShift Container Platform" /><category term="Podman" /><category term="x86_64" /><author><name>Alessandro Arrichiello</name></author><id>https://developers.redhat.com/blog/?p=556797</id><updated>2019-01-31T13:00:25Z</updated><published>2019-01-31T13:00:25Z</published><content type="html">&lt;p&gt;Usually, we think about IoT applications as something very special made for low power devices that have limited capabilities. For this reason, we tend to use completely different technologies for IoT application development than the technology we use for creating a datacenter&amp;#8217;s services.&lt;/p&gt; &lt;p&gt;This article is part 1 of a two-part series. In it, we&amp;#8217;ll explore some techniques that may give you a chance to use &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; as a medium for application builds—techniques that enable the portability of containers across different environments. Through these techniques, you may be able to use the same language, framework, or tool used in your datacenter straight to the &amp;#8220;edge,&amp;#8221; even with different CPU architectures!&lt;/p&gt; &lt;p&gt;We usually use &amp;#8220;edge&amp;#8221; to refer to the geographic distribution of computing nodes in a network of IoT devices that are at the &amp;#8220;edge&amp;#8221; of an enterprise. The &amp;#8220;edge&amp;#8221; could be a remote datacenter or maybe multiple geo-distributed factories, ships, oil plants, and so on.&lt;/p&gt; &lt;p&gt;&lt;span id="more-556797"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In this article, we&amp;#8217;ll address a very common theme—the creation and distribution of containers—but our target environment will be an x86_64 edge gateway.&lt;/p&gt; &lt;p&gt;As you know, &lt;a href="http://openshift.com/"&gt;OpenShift&lt;/a&gt; is a great platform for application development. It&amp;#8217;s shipped with a &lt;a href="https://developers.redhat.com/blog/category/kubernetes/"&gt;Kubernetes&lt;/a&gt; orchestrator enriched with a fully integrated and containerized Jenkins, native “build” resources, and a very powerful web interface.&lt;/p&gt; &lt;p&gt;Consider the following real use case scenario, in which a customer asked for a way to create and test containers in a Platform as a Service (PaaS) environment for deployment at the edge.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/development-1.png"&gt;&lt;img class=" aligncenter wp-image-556817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/development-1-1024x415.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/development-1-1024x415.png" alt="Diagram of a real use case" width="640" height="259" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/development-1-1024x415.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/development-1-300x122.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/development-1-768x312.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We used an existing standalone IoT demo application, splitting it into different projects to create truly independent containers.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Session-4-Learn-and-run-Next-Generation-IoT-architecture-demo.png"&gt;&lt;img class=" aligncenter wp-image-556857 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Session-4-Learn-and-run-Next-Generation-IoT-architecture-demo.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Session-4-Learn-and-run-Next-Generation-IoT-architecture-demo.png" alt="Splitting a standalone IoT application into different projects" width="960" height="540" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/Session-4-Learn-and-run-Next-Generation-IoT-architecture-demo.png 960w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Session-4-Learn-and-run-Next-Generation-IoT-architecture-demo-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/Session-4-Learn-and-run-Next-Generation-IoT-architecture-demo-768x432.png 768w" sizes="(max-width: 960px) 100vw, 960px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You&amp;#8217;ll find the initial demo project &lt;a href="https://github.com/redhat-iot/Virtual_IoT_Gateway"&gt;here&lt;/a&gt; and the main placeholder container project &lt;a href="https://github.com/alezzandro/iotgw_mainproject"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The main project page also contains instructions for re-creating the demo environment on your platform.&lt;/p&gt; &lt;p&gt;As you&amp;#8217;ll see from the project&amp;#8217;s pages, the containerization process was not difficult, thanks to the usage of &lt;a href="https://developers.redhat.com/products/amq/overview/"&gt;Red Hat AMQ&lt;/a&gt; queues for messaging.&lt;/p&gt; &lt;p&gt;We created three containers, one for each software brick of our standalone application demo, and then we created respective Jenkins pipelines in OpenShift, as shown in the following screenshot. Thanks to this containerization, every software piece may inherit a full, independent development environment and have independent testing activities.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m35s657.png"&gt;&lt;img class=" aligncenter wp-image-556867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m35s657-1024x576.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m35s657-1024x576.png" alt="Jenkins pipelines in OpenShift" width="640" height="360" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m35s657-1024x576.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m35s657-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m35s657-768x432.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m35s657.png 1600w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A benefit of the created pipelines and the independent project is that we can also leverage the OpenShift/Kubernetes features of project isolation and replication for testing our brand new containers in different environments.&lt;/p&gt; &lt;p&gt;Thanks to the containers&amp;#8217; portability, the last step would be to push the containers onto a gateway hub, which is a secondary &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; setup in a remote factory, for deploying the developed applications onto the edge gateway.&lt;/p&gt; &lt;p&gt;I bet you’re guessing about the final deployment at the edge, right?&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m59s080.png"&gt;&lt;img class=" aligncenter wp-image-556827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m59s080-1024x576.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m59s080-1024x576.png" alt="Final deployment at the edge" width="640" height="360" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m59s080-1024x576.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m59s080-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m59s080-768x432.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/vlcsnap-2018-10-22-11h11m59s080.png 1600w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The final deployment will be handled by the central OpenShift platform or through the remote one (on an IoT hub, the &amp;#8220;remote factory&amp;#8221;), thanks to the &lt;a href="https://www.redhat.com/en/technologies/management/ansible"&gt;Red Hat Ansible Automation&lt;/a&gt; suite.&lt;/p&gt; &lt;p&gt;OpenShift has a special feature included called OpenShift Ansible Service Broker. It follows the Open Service Broker API and let you use a common Ansible Playbook for invoking an internal service (a Kubernetes/OpenShift one) or an external service, for example, a virtual machine or just a remote gateway.&lt;/p&gt; &lt;p&gt;For this reason, we can leverage this feature to invoke a custom Ansible Playbook created for deploying the standalone containers on a remote system to test them.&lt;/p&gt; &lt;p&gt;Once we tested one or multiple deployments, we can then scale out the container distribution through Red Hat Ansible Tower using the same Ansible Playbook we developed and tested through OpenShift Ansible Service Broker.&lt;/p&gt; &lt;p&gt;The first version of our Ansible Playbook for remote container deployment leveraged the Docker daemon for their execution. We then enhanced it by replacing the daemon (a single point of failure) with standalone container execution, thanks to &lt;a href="https://developers.redhat.com/blog/tag/podman/"&gt;Podman&lt;/a&gt; and its &lt;code&gt;systemd&lt;/code&gt; integration. (Read more about &lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Podman in Red Hat Enterprise Linux&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/"&gt;managing containerized system services&lt;/a&gt;.)&lt;/p&gt; &lt;p&gt;The main objective of this example is to show the powerful capabilities of a complete PaaS environment created on top of Kubernetes—the best and de facto container orchestrator—that is used for creating and testing containers for your IoT edge applications.&lt;/p&gt; &lt;p&gt;Are you curious to see a live demo? Take a look at this OpenShift Common Briefings recording, in which I presented live the solution:&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/bNipu5OA1o4?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Of course, this is just an example and every use case could be different, for example, introducing the need for a container architecture other than x86_64.&lt;/p&gt; &lt;p&gt;In the second and last part of this series, we’ll go over the creation, execution, and testing of multi-architecture containers on Red Hat OpenShift Container Platform. Stay tuned!&lt;/p&gt; &lt;h2&gt;Additional resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/"&gt;Podman: Managing pods and containers in a local container runtime&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/"&gt;Managing containerized system services with Podman&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;Podman – The next generation of Linux container tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Intro to Podman (New in Red Hat Enterprise Linux 7.6)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/05/23/customizing-an-openshift-ansible-playbook-bundle/"&gt;Customizing an OpenShift Ansible Playbook Bundle&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;About Alessandro&lt;/h2&gt; &lt;p class="selectionShareable"&gt;&lt;img class="bio-img-display" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/profile_picture-300x300.jpg" alt="Alessandro Arrichiello" align="left" /&gt;&lt;/p&gt; &lt;p class="author-info selectionShareable"&gt;Alessandro Arrichiello is a Solution Architect for Red Hat Inc. He has a passion for GNU/Linux systems, which began at age 14 and continues today. He has worked with tools for automating enterprise IT: configuration management and continuous integration through virtual platforms. He’s now working on distributed cloud environments involving PaaS (OpenShift), IaaS (OpenStack) and Processes Management (CloudForms), Containers building, instances creation, HA services management, and workflow builds.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#38;linkname=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F31%2Fiot-edge-development-and-deployment-with-containers-through-openshift-part-1%2F&amp;#038;title=IoT%20edge%20development%20and%20deployment%20with%20containers%20through%20OpenShift%3A%20Part%201" data-a2a-url="https://developers.redhat.com/blog/2019/01/31/iot-edge-development-and-deployment-with-containers-through-openshift-part-1/" data-a2a-title="IoT edge development and deployment with containers through OpenShift: Part 1"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/31/iot-edge-development-and-deployment-with-containers-through-openshift-part-1/"&gt;IoT edge development and deployment with containers through OpenShift: Part 1&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5vADJZvMDfs" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Usually, we think about IoT applications as something very special made for low power devices that have limited capabilities. For this reason, we tend to use completely different technologies for IoT application development than the technology we use for creating a datacenter&amp;#8217;s services. This article is part 1 of a two-part series. In it, we&amp;#8217;ll [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/31/iot-edge-development-and-deployment-with-containers-through-openshift-part-1/"&gt;IoT edge development and deployment with containers through OpenShift: Part 1&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/31/iot-edge-development-and-deployment-with-containers-through-openshift-part-1/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">556797</post-id><dc:creator>Alessandro Arrichiello</dc:creator><dc:date>2019-01-31T13:00:25Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/31/iot-edge-development-and-deployment-with-containers-through-openshift-part-1/</feedburner:origLink></entry><entry><title>The State Of FaaS and Serverless on Kubernetes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Z5t5zCiRpa8/" /><category term="Kubernetes" /><category term="Serverless" /><category term="OpenWhisk" /><author><name>David Millsaps</name></author><id>https://developers.redhat.com/blog/?p=557697</id><updated>2019-01-30T16:11:37Z</updated><published>2019-01-30T16:11:37Z</published><content type="html">&lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/w4msKFfGZlQ?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Lightning Talk: The State Of FaaS on Kubernetes &amp;#8211; Michael Hausenblas, Red Hat (Beginner Skill Level)&lt;/p&gt; &lt;p&gt;FaaS (Function-as-a-Service) or serverless as some call it is a promising compute paradigm suitable for event-driven scenarios. In this session we review the current open source offerings for FaaS on Kubernetes (Apache Open Whisk, kubeless, OpenFaaS, etc.) and address pros/cons both on an architectural level as well as from a UX point of view. We will also discuss the topic FaaS vs. containers from a developers as well as an operators perspective.&lt;/p&gt; &lt;p&gt;About Michael&lt;/p&gt; &lt;p&gt;Michael is a Developer Advocate for Go, Kubernetes, and OpenShift at Red Hat where he helps appops to build and operate distributed services. His background is in large-scale data processing and container orchestration and he&amp;#8217;s experienced in advocacy and standardization at W3C and IETF. Before Red Hat, Michael worked at Mesosphere, MapR and in two research institutions in Ireland and Austria. He contributes to open source software (mainly using Go), speaks at conferences and user groups, blogs, and hangs out on Twitter too much.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#38;linkname=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fthe-state-of-faas-and-serverless-on-kubernetes%2F&amp;#038;title=The%20State%20Of%20FaaS%20and%20Serverless%20on%20Kubernetes" data-a2a-url="https://developers.redhat.com/blog/2019/01/30/the-state-of-faas-and-serverless-on-kubernetes/" data-a2a-title="The State Of FaaS and Serverless on Kubernetes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/30/the-state-of-faas-and-serverless-on-kubernetes/"&gt;The State Of FaaS and Serverless on Kubernetes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Z5t5zCiRpa8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Lightning Talk: The State Of FaaS on Kubernetes &amp;#8211; Michael Hausenblas, Red Hat (Beginner Skill Level) FaaS (Function-as-a-Service) or serverless as some call it is a promising compute paradigm suitable for event-driven scenarios. In this session we review the current open source offerings for FaaS on Kubernetes (Apache Open Whisk, kubeless, OpenFaaS, etc.) and address [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/30/the-state-of-faas-and-serverless-on-kubernetes/"&gt;The State Of FaaS and Serverless on Kubernetes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/30/the-state-of-faas-and-serverless-on-kubernetes/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">557697</post-id><dc:creator>David Millsaps</dc:creator><dc:date>2019-01-30T16:11:37Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/30/the-state-of-faas-and-serverless-on-kubernetes/</feedburner:origLink></entry><entry><title>Curse you choices! Kubernetes or Application Servers? (Part 3)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/b2LXpxuRr-M/" /><category term="Containers" /><category term="Java" /><category term="Kubernetes" /><category term="Microservices" /><category term="Modern App Dev" /><category term="Red Hat OpenShift Container Platform" /><category term="ci/cd" /><category term="containers" /><category term="kubernetes" /><category term="MicroProfile" /><category term="microservices" /><category term="Red Hat JBoss EAP" /><category term="Red Hat OpenShift" /><category term="thorntail" /><category term="wildfly swarm" /><author><name>Ken Finnigan</name></author><id>https://developers.redhat.com/blog/?p=527547</id><updated>2019-01-30T13:00:39Z</updated><published>2019-01-30T13:00:39Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;This is the finale of a series on whether &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; is the new Application Server. In this part I discuss the choice between Kubernetes, a traditional application server, and alternatives.  Such alternatives can be referred to as &lt;a href="https://antoniogoncalves.org/2016/07/13/just-enough-app-server-with-wildfly-swarm/"&gt;&amp;#8220;Just enough Application Server&amp;#8221;&lt;/a&gt;, like &lt;a href="https://developers.redhat.com/blog/tag/thorntail/"&gt;Thorntail&lt;/a&gt;. There are several articles on Thorntail (previously known as Wildfly Swarm) on the &lt;a href="https://developers.redhat.com/blog/"&gt;Red Hat Developer blog&lt;/a&gt;. A good introduction to Thorntail is in the &lt;a href="https://developers.redhat.com/blog/2018/10/17/announcing-thorntail-2-2-general-availability/"&gt;2.2 product announcement&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Quick Recap&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We’ve discussed the benefits and drawbacks of containers within Kubernetes environments in &lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/2018/09/05/kubernetes-new-operating-environment"&gt;&lt;span style="font-weight: 400;"&gt;Part 1&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. In particular that containers help with packaging deployments, but they’re not a panacea. It’s still possible to create containers with bad content.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Application Servers have been a crucial piece of middleware for decades. They provide integration with crucial services, such as security and transactions&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;b&gt;, &lt;/b&gt;required when developing complex applications. In &lt;a style="font-weight: 400;" href="https://developers.redhat.com/blog/2018/10/02/are-app-servers-dead-in-the-age-of-kubernetes-part-2/"&gt;Part 2&lt;/a&gt; we outlined the use cases for Application Servers, and their continued relevance today. The problems that Application Servers solve are still present. Kubernetes and Linux containers do not remove the need for security or transactions.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Right Tool for the Right Job!&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Though it’s a cliche, it’s also completely accurate in this instance. We&amp;#8217;re certainly spoiled for choice:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Kubernetes&lt;/li&gt; &lt;li&gt;Traditional Application Servers, such as WildFly / &lt;a href="https://developers.redhat.com/products/eap/overview/"&gt;Red Hat JBoss Enterprise Application Server&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://antoniogoncalves.org/2016/07/13/just-enough-app-server-with-wildfly-swarm/"&gt;Just enough Application Server&lt;/a&gt;, such as Thorntail&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Kubernetes alone is great for lots of applications not requiring the services offered by Application Servers. On the flip side, there will be applications that do require those services or frameworks. Those applications need functionality offered by WildFly and Thorntail. Whatever their final operating environment is, Kubernetes or bare metal.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Where does that leave us?&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;As a whole the IT industry often swings between ideas as if they’re polar opposites. Even worse, that one idea is the &lt;/span&gt;&lt;b&gt;only&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; solution for everything! That’s neither a realistic or practical approach for the majority of enterprises today.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Greenfield development is very rare. While switching between “solutions” on a frequent basis is completely impractical. With the time and cost to switch, there&amp;#8217;s also different developer skills for a new &amp;#8220;solution&amp;#8221;. Most enterprises don&amp;#8217;t have the resources to retrain their developers on new technology every few years. Sticking with a common programming model is key to long term success.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Since microservices first came to prominence, we realized that not everything needs to fit a single mold. Could a monolith be good enough? Are thousands of distributed microservices too complicated? Maybe a simple Java application doesn’t need an Application Server but just the JVM as a container. Though you may not see the JVM as a container. It offers similar isolation as Linux containers, but was around long before.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;These are all great questions to ask. Some, or all, of which should be answered before choosing the operating environment for an application.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In the end, it’s about knowing your application needs. Then using that information to determine the best Application Server or container, framework, and environment combination to bring it to life. Sometimes that’s Kubernetes, other times it’s Application Servers, whether traditional or &amp;#8220;just enough&amp;#8221;. Goals of the application and the skillsets of existing resources are key factors in determining the fit.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Is Kubernetes the new Application Server? Yes and no. For some uses it will be. For others it won&amp;#8217;t.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Is there a new Application Server, at least for those dealing with Java? Not in the strict sense. The JVM container is the new &amp;#8220;Application Server&amp;#8221;, but certainly isn&amp;#8217;t new. With the rise of executable jars (Fat JARs) and Just enough Application Servers, the JVM is seeing growth again.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Whether it’s an Application Server, a Fat JAR, a hollow JAR, layered container images, or anything else that might come along in the future for Java. The JVM is the new container of choice, with Kubernetes as the operating environment. Offering the flexibility to choose an Application Server, or utilize plain Java, for an application. With the JVM container as the common denominator across applications.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Maybe “containers” do rule the world?!&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#38;linkname=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F30%2Fcurse-you-choices-kubernetes-or-application-servers-part-3%2F&amp;#038;title=Curse%20you%20choices%21%20Kubernetes%20or%20Application%20Servers%3F%20%28Part%203%29" data-a2a-url="https://developers.redhat.com/blog/2019/01/30/curse-you-choices-kubernetes-or-application-servers-part-3/" data-a2a-title="Curse you choices! Kubernetes or Application Servers? (Part 3)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/30/curse-you-choices-kubernetes-or-application-servers-part-3/"&gt;Curse you choices! Kubernetes or Application Servers? (Part 3)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/b2LXpxuRr-M" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;This is the finale of a series on whether Kubernetes is the new Application Server. In this part I discuss the choice between Kubernetes, a traditional application server, and alternatives.  Such alternatives can be referred to as &amp;#8220;Just enough Application Server&amp;#8221;, like Thorntail. There are several articles on Thorntail (previously known as Wildfly Swarm) on [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/30/curse-you-choices-kubernetes-or-application-servers-part-3/"&gt;Curse you choices! Kubernetes or Application Servers? (Part 3)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/30/curse-you-choices-kubernetes-or-application-servers-part-3/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">527547</post-id><dc:creator>Ken Finnigan</dc:creator><dc:date>2019-01-30T13:00:39Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/30/curse-you-choices-kubernetes-or-application-servers-part-3/</feedburner:origLink></entry><entry><title>AMQ Online 101 - What I've learnt from recent AMQ Online Hackfest</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MKH2B_GTH7A/amq-online-101-what-ive-learnt-from.html" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="AMQ" scheme="searchisko:content:tags" /><category term="AMQ Online" scheme="searchisko:content:tags" /><category term="broker" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_christinalineng" scheme="searchisko:content:tags" /><category term="MaaS" scheme="searchisko:content:tags" /><category term="messaging" scheme="searchisko:content:tags" /><category term="Messagings as a Service" scheme="searchisko:content:tags" /><category term="MQ" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-amq_online_101_what_i_ve_learnt_from_recent_amq_online_hackfest</id><updated>2019-01-29T14:27:35Z</updated><published>2019-01-29T14:15:00Z</published><content type="html">AMQ Online, project name, EnMasse. Recently, I've attended AMQ Online Hackfest where the Rob and Ulf the engineering team &lt;b&gt;&lt;i&gt;kindly&lt;/i&gt;&lt;/b&gt; ask us to take a hack on the new platform. If you don't know what AMQ Online is, it's basically an online self-service (Messaging as a Service) messaging platform for developers/application owners to quickly spin up their own queue and topic without worrying about the scalability, network setting and all sorts of operation setups.&lt;br /&gt;&lt;br /&gt;Watch this quick video overview on what is AMQ Online:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/P1RcYH6CuQI/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/P1RcYH6CuQI?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;Before the hack, they went through the basics of AMQ Online, and here is my take on explaining the basics of AMQ Online. With AMQ Online being the platform to service users, there are obviously two main area of focus for people depending on their roles. &amp;nbsp;The administration side to spin up and manage the platform, the other side of course is the user end, where they will be requesting for the message services.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;Admin&lt;/span&gt;&lt;/b&gt; does the installation of the platform foundation on OpenShift, they install all the basic elements that controls all the needed brokers, routers, user console and monitoring tools, and also takes care of setting up the authentication and authorization of who has access to the platform. We don't always have unlimited computing resource for all users, admin also has control over the resource limitation and create different plans that can apply to accompany different needs from users.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-k8ElwzFYQbE/XFBeAy3iEiI/AAAAAAAAF0s/jTS9PN8eSHI2isNCnf4UXM4rt85RdhvcwCK4BGAYYCw/s1600/Screen%2BShot%2B2019-01-29%2Bat%2B9.06.29%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="332" src="https://4.bp.blogspot.com/-k8ElwzFYQbE/XFBeAy3iEiI/AAAAAAAAF0s/jTS9PN8eSHI2isNCnf4UXM4rt85RdhvcwCK4BGAYYCw/s640/Screen%2BShot%2B2019-01-29%2Bat%2B9.06.29%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Each user will be assign to an "Address Space", each Address Space will have separate sets of brokers, router and console for it, and later on when user comes in to ask for queue and topics, they will be running on top of these set of brokers and routers. Admins does not create the actual "Address Space", their job is to create PLANs that specify the limits, configuration. So when a new user comes in, they can then create the "Address Space" base on the plans.&lt;br /&gt;&lt;br /&gt;There are several plans that can be defined.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Infrastructure configuration&lt;/b&gt; - as name suggested, it configures the hardware resource allocated to the components, such as CPU. memory, storage of console, broker and router, also some other specific config too.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Address Space Plan&lt;/b&gt; - basically the main quota control, it knows how much hardware can be used by referring to infrastructure configuration, as well as controls the number of routers/brokers in the system. And so what are the queue/topic plans are available in the address space.&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Address Plan&lt;/b&gt; - Address plan defines the consumption of resource base on the percentage. The sum of number of brokers/routers of the entire address space will determine how many instance of broker and router will be running in the name space.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://1.bp.blogspot.com/-YMVJ2cvmpws/XE_RVsrpSOI/AAAAAAAAF0U/0STEvKWrGy8HHHmPUJzQQVc1GS0VRV65gCK4BGAYYCw/s1600/imageedit_16_8722742427.png" imageanchor="1"&gt;&lt;img border="0" height="411" src="https://1.bp.blogspot.com/-YMVJ2cvmpws/XE_RVsrpSOI/AAAAAAAAF0U/0STEvKWrGy8HHHmPUJzQQVc1GS0VRV65gCK4BGAYYCw/s640/imageedit_16_8722742427.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-size: large;"&gt;&lt;b&gt;Tenants&lt;/b&gt;&lt;/span&gt; are the users of the platform, they will be creating "Address Space", and create destinations by applying the plans on top of it. &amp;nbsp;After the queue and topics are created, the tenants can go ahead and create credentials maps to different access roles, they can decide what account has access to admin console, which account has consume/produce right to any addresses(queues/ topics) in the Address Space. Please note, tenants will have no visibility to queue or topics of other Address Space, unless specially specified. Once the address are created and config correctly, application will be able to use the credential to read/write to the messaging address.&lt;br /&gt;&lt;br /&gt;These are the three things tenants need to create&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Address Space&lt;/b&gt; - refer back to&amp;nbsp;Address Space Plan and create and config pod base on the plan selected.&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Address&lt;/b&gt; - the destination create for user access. Maps to address plan.&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Message User&lt;/b&gt; - defines the authentication method for destination access, and the authorization of destinations to this user.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;a href="http://2.bp.blogspot.com/-OmvCwYyrLdw/XE_aP9ex8mI/AAAAAAAAF0g/RrfYwcXy5Ls2s4K4SWXJ_RHwtAeRK-eXACK4BGAYYCw/s1600/imageedit_18_9234256356.png" imageanchor="1"&gt;&lt;img border="0" height="392" src="https://2.bp.blogspot.com/-OmvCwYyrLdw/XE_aP9ex8mI/AAAAAAAAF0g/RrfYwcXy5Ls2s4K4SWXJ_RHwtAeRK-eXACK4BGAYYCw/s640/imageedit_18_9234256356.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Watch this video on AMQ Online 101:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/Zcd7Tgx8XUc/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/Zcd7Tgx8XUc?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;There are different types of Address Space, Address.. and other configs available. I want to keep this post as simple and basic as possible, please read into the documentation for more details. I might go over in next post, if I ever get some spare time to do it :) Till next time! Enjoy.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hFXzh/~4/QJZ8sc0GUYQ" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MKH2B_GTH7A" height="1" width="1" alt=""/&gt;</content><summary>AMQ Online, project name, EnMasse. Recently, I've attended AMQ Online Hackfest where the Rob and Ulf the engineering team kindly ask us to take a hack on the new platform. If you don't know what AMQ Online is, it's basically an online self-service (Messaging as a Service) messaging platform for developers/application owners to quickly spin up their own queue and topic without worrying about the sc...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2019-01-29T14:15:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/blogspot/hFXzh/~3/QJZ8sc0GUYQ/amq-online-101-what-ive-learnt-from.html</feedburner:origLink></entry><entry><title>Podman can now ease the transition to Kubernetes and CRI-O</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7pk4RQd9fl4/" /><category term="Containers" /><category term="Kubernetes" /><category term="Red Hat Enterprise Linux" /><category term="containers" /><category term="cri-o" /><category term="kubernetes" /><category term="Podman" /><category term="yaml" /><author><name>Brent Baude</name></author><id>https://developers.redhat.com/blog/?p=555357</id><updated>2019-01-29T13:00:59Z</updated><published>2019-01-29T13:00:59Z</published><content type="html">&lt;p&gt;Configuring &lt;a href="https://developers.redhat.com/blog/category/kubernetes/"&gt;Kubernetes&lt;/a&gt; is an exercise in defining objects in YAML files.  While not required, it is nice to have an editor that can at least understand YAML, and it&amp;#8217;s even better if it knows the Kubernetes language.  Kubernetes YAML is descriptive and powerful. We love the modeling of the desired state in a declarative language. That said, if you are used to something simple like &lt;code&gt;podman run&lt;/code&gt;, the transition to YAML descriptions can be a bitter pill to swallow.&lt;/p&gt; &lt;p&gt;As the development of &lt;a href="https://github.com/containers/libpod"&gt;Podman&lt;/a&gt; has continued, we have had more discussions focused on developer use cases and developer workflows.  These conversations are fueled by user feedback on our various principles, and it seems clear that the proliferation of container runtimes and technologies has some users scratching their heads.  One of these recent conversations was centered around orchestration and specifically, local orchestration. Then Scott McCarty tossed out an idea: “What I would really like to do is help users get from Podman to orchestrating their containers with Kubernetes.” And just like that, the proverbial light bulb went on.&lt;/p&gt; &lt;p&gt;A &lt;a href="https://github.com/containers/libpod/commit/49d9a8f9518dd3d38219f5ead6782d4919433cfc"&gt;recent pull request to libpod&lt;/a&gt; has started to deliver on that very idea. Read on to learn more.&lt;/p&gt; &lt;p&gt;&lt;span id="more-555357"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Podman can now capture the description of local pods and &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; and then help users transition to a more sophisticated orchestration environment like Kubernetes.  I think Podman is the first container runtime to take this scenario seriously and not depend on third-party tools.&lt;/p&gt; &lt;p&gt;When considering how to implement something like this, we considered the following developer and user workflow:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create containers/pods locally using Podman on the command line.&lt;/li&gt; &lt;li&gt;Verify these containers/pods locally or in a localized container runtime (on a different physical machine).&lt;/li&gt; &lt;li&gt;Snapshot the container and pod descriptions using Podman and help users re-create them in Kubernetes.&lt;/li&gt; &lt;li&gt;Users add sophistication and orchestration (where Podman cannot) to the snapshot descriptions and leverage advanced functions of Kubernetes.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Enough teasing; show me the goods&lt;/h2&gt; &lt;p&gt;At this point, it probably will make more sense to see a quick demo.  First, I will create a simple Podman container running &lt;code&gt;nginx&lt;/code&gt; and binding the host’s port 8000 to the container’s port 80.&lt;/p&gt; &lt;pre&gt;$ sudo podman run -dt -p 8000:80 --name demo quay.io/libpod/alpine_nginx:latest 51e14356dc3f2baad3acc0706cbdb9bffa3cba8c2064ef7db9f8061c77db2ae6 $ sudo podman ps CONTAINER ID  IMAGE                  COMMAND           CREATED    STATUS        PORTS             NAMES 51e14356dc3f  quay.io/libpod/alpine_nginx:latest  nginx -g daemon o... 4 seconds ago Up 4 seconds ago  0.0.0.0:8000-&amp;#62;80/tcp demo $ curl http://localhost:8000 podman rulez $ &lt;/pre&gt; &lt;p&gt;As you can see, we were able to successfully &lt;code&gt;curl&lt;/code&gt; the bound ports and get a response from the &lt;code&gt;nginx&lt;/code&gt; container.  Now, we can perform the snapshot of the container which will generate Kubernetes YAML. Because we are testing this on the network, we will also ask Podman to generate a service file.&lt;/p&gt; &lt;pre&gt;$ sudo podman generate kube demo  &amp;#62; demo.yml&lt;/pre&gt; &lt;p&gt;Once we have the YAML file, we can then re-create the containers/pods in Kubernetes:&lt;/p&gt; &lt;pre&gt;$ sudo kubectl create -f demo.yml pod/demo-libpod created service/demo-libpod created&lt;/pre&gt; &lt;p&gt;Now we can check the results and see if “podman rulez.”&lt;/p&gt; &lt;pre&gt;$ sudo kubectl get pods NAME          READY   STATUS    RESTARTS   AGE demo-libpod   1/1     Running   0     27s $ sudo kubectl get svc NAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)     AGE demo-libpod   NodePort    10.96.185.205   &amp;#60;none&amp;#62;     80:31393/TCP   24s kubernetes    ClusterIP   10.96.0.1     &amp;#60;none&amp;#62;        443/TCP        8m17s $ curl http://192.168.122.123:31393 podman rulez &lt;/pre&gt; &lt;h2&gt;Podman’s role as a container engine&lt;/h2&gt; &lt;p&gt;When bouncing this idea off of folks and during early development, we really needed to articulate Podman’s role.  There were concerns of scope creep and conversations about where Podman “ends” and Kubernetes starts. Most importantly, we did not want to confuse developers by blurring the lines.  We kept leaning on the use case that developers should use Podman to develop container content locally and then “lift” that to a Kubernetes environment where greater control of orchestration could be applied.&lt;/p&gt; &lt;p&gt;In general,  these are the rules that apply to this use case based on where the Podman code and features stand today:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;All generated descriptions of a Podman container end up “wrapped” in a Kubernetes V1 Pod object.&lt;/li&gt; &lt;li&gt;All generated descriptions of a Podman pod that contains containers also result in a Kubernetes v1 Pod object.&lt;/li&gt; &lt;li&gt;NodePort is used in the service file generation as a way to expose services to the network. A random port is generated during this process.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It should also be noted that Podman can describe containers with a lot more granularity than Kubernetes.  That results in containers being a bit stripped down when their YAML is generated. Moreover, because Podman and the Kubernetes environment are not actually connected, the generation of the YAML cannot be specific for some things like IP addresses.  Earlier, I described that we use NodePort to expose services in the Kubernetes environment. We obviously do not check that the random port is actually available and this is, in spirit, no different than creating the Kubernetes YAML by hand.&lt;/p&gt; &lt;h2&gt;A more in-depth example&lt;/h2&gt; &lt;p&gt;I recently created a multi-container demo that uses a database, a database client, and a web front end.  The idea was to show how multiple containers can work in unison. It uses three images that are also available to you:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;quay.io/baude/demodb:latest&lt;/code&gt; &amp;#8212; MariaDB server&lt;/li&gt; &lt;li&gt;&lt;code&gt;quay.io/baude/demogen:latest&lt;/code&gt; &amp;#8212; Generates random numbers and adds them to the DB&lt;/li&gt; &lt;li&gt;&lt;code&gt;quay.io/baude/demoweb:latest&lt;/code&gt; &amp;#8212; Web front end that graphs random numbers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The workflow for these containers is that the &lt;code&gt;demogen&lt;/code&gt; container inserts random numbers into the MariaDB server.  And then, users can view a live graphing of these numbers with a browser while connecting to the web front-end container.&lt;/p&gt; &lt;h3&gt;Running the demo with Podman&lt;/h3&gt; &lt;p&gt;Before we can eventually generate Kubernetes YAML, we need to get the demo up and running with Podman.  In this case, I will run each &amp;#8220;component&amp;#8221; in its own pod. First, we run the MariaDB and I will use the &lt;code&gt;podman container runlabel&lt;/code&gt; for &lt;a href="https://podman.io/blogs/2018/12/03/podman-runlabel.html"&gt;simplicity&lt;/a&gt;.  The &lt;code&gt;runlabel&lt;/code&gt; sub-command allows Podman to execute a predefined command embedded in a container image label, which is often easier than typing out lengthy command-line options.  When the &lt;code&gt;runlabel&lt;/code&gt; command is executed, you will see the command that it actually runs.&lt;/p&gt; &lt;pre&gt;$ sudo podman container runlabel -p pod quay.io/baude/demodb:latest Command: /proc/self/exe run --pod new:demodb -P -e MYSQL_ROOT_PASSWORD=x -dt quay.io/baude/demodb:latest 6f451c893e0082960f699967c7188e7dedab98f249600bcb9ccfe0f54368602f $ sudo podman container runlabel -p pod quay.io/baude/demogen:latest Command: /proc/self/exe run -dt --pod new:demogen quay.io/baude/demogen:latest python3 generatenums.py 97a8f008686784def0c19bd4314e71bc26209f647d9ea7222940f04fb9eac1c0 $ sudo podman container runlabel -p pod quay.io/baude/demoweb:latest Command: /proc/self/exe run --pod new:demoweb -dt -p 8050:8050 quay.io/baude/demoweb:latest 5f3096dc54bb6311d75aa604be10e30b6dd804d5bf04816bb85d2368d95274eb &lt;/pre&gt; &lt;p&gt;We now have three pods named &lt;code&gt;demodb&lt;/code&gt;, &lt;code&gt;demogen&lt;/code&gt;, and &lt;code&gt;demoweb&lt;/code&gt;.  Each pod contains its “worker” container and an “infra” container.&lt;/p&gt; &lt;pre&gt;$ sudo podman pod ps POD ID         NAME      STATUS    CREATED         # OF CONTAINERS   INFRA ID 5879b590d43e   demoweb Running   4 minutes ago 2              a08da7cc037e 50d18daf6438   demogen Running   4 minutes ago 2              7d8ff6ee1c8a 5aed9c3bbbd5   demodb    Running   4 minutes ago   2     000140e3ebc3&lt;/pre&gt; &lt;p&gt;Keep in mind that with Podman, port assignments, cgroups, etc. are assigned to the “infra” container and inherited pod-wide by all the pod’s containers.  Remember the default options for &lt;code&gt;podman ps&lt;/code&gt; does not show the “infra” containers. That requires the use of the &lt;code&gt;--infra&lt;/code&gt; command-line switch in &lt;code&gt;podman ps&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;$ sudo podman ps -p CONTAINER ID  IMAGE                COMMAND               CREATED        STATUS            PORTS  NAMES            POD 5f3096dc54bb  quay.io/baude/demoweb:latest  python3 /root/cod... 4 minutes ago  Up 4 minutes ago     jovial_joliot      5879b590d43e 97a8f0086867  quay.io/baude/demogen:latest  python3 /root/cod... 4 minutes ago  Up 4 minutes ago     optimistic_joliot  50d18daf6438 6f451c893e00  quay.io/baude/demodb:latest   docker-entrypoint... 4 minutes ago  Up 4 minutes ago     boring_khorana     5aed9c3bbbd5&lt;/pre&gt; &lt;p&gt;And if you use your web browser, you can connect to the web client and see a live plotting of the random numbers in the database.  Assuming you used the &lt;code&gt;podman container runlabel&lt;/code&gt;, the web client is now bound to the host’s 8050 port and can be resolved at http://localhost:8050.&lt;/p&gt; &lt;div id="attachment_555377" style="width: 863px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/graph.png"&gt;&lt;img class="wp-image-555377" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/graph-1024x415.png" alt="Sample output from generated random numbers" width="853" height="346" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/graph-1024x415.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/graph-300x122.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/graph-768x311.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/graph.png 1251w" sizes="(max-width: 853px) 100vw, 853px" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;Sample output from generated random numbers&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Testing Kubernetes&lt;/h3&gt; &lt;p&gt;For testing Kubernetes, I have been using &lt;a href="https://kubernetes.io/docs/setup/minikube/"&gt;minikube&lt;/a&gt;, &lt;a href="https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#kvm2-driver"&gt;libvirt&lt;/a&gt;, and &lt;a href="https://kubernetes.io/docs/setup/minikube/#cri-o"&gt;crio&lt;/a&gt; on Fedora 29. For the purposes of brevity, I won’t go deep into the setup, but the following are the command-line options I use to start minikube.&lt;/p&gt; &lt;pre&gt;$ sudo minikube start --network-plugin=cni --container-runtime=cri-o --vm-driver kvm2 --kubernetes-version v1.12.0&lt;/pre&gt; &lt;p&gt;Note: Some users have had to add &lt;code&gt;--cri-socket=/var/run/crio/crio.sock&lt;/code&gt; to avoid Docker usage with minikube.&lt;/p&gt; &lt;h3&gt;Generating Kubernetes YAML from the existing Podman pods&lt;/h3&gt; &lt;p&gt;To generate Kubernetes YAML files from a Podman pod (or container outside a pod), we use the recently added  &lt;code&gt;podman generate kube&lt;/code&gt; command. Note the singular option to create a service.&lt;/p&gt; &lt;pre&gt;$ sudo podman generate kube --help NAME:   podman generate kube - Generate Kubernetes pod YAML for a container or pod USAGE:   podman generate kube [command options] CONTAINER|POD-NAME DESCRIPTION:   Generate Kubernetes Pod YAML OPTIONS:   --service, -s  only generate YAML for kubernetes service object&lt;/pre&gt; &lt;p&gt;To run our demo in Kubernetes, we need to generate Kubernetes YAML for each pod.  Let&amp;#8217;s generate YAML for the &lt;code&gt;demodb&lt;/code&gt; pod first.&lt;/p&gt; &lt;pre&gt;$ sudo podman generate kube demodb # Generation of Kubernetes YAML is still under development! # # Save the output of this file and use kubectl create -f to import # it into Kubernetes. # # Created with podman-0.12.2-dev apiVersion: v1 kind: Pod metadata:  creationTimestamp: 2018-12-11T15:24:09Z  labels:     app: demodb  name: demodb spec:  containers:  - command:     - docker-entrypoint.sh     - mysqld     env:     - name: PATH      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin     - name: TERM      value: xterm     - name: HOSTNAME     - name: container      value: podman     - name: GOSU_VERSION      value: "1.10"     - name: GPG_KEYS      value: "199369E5404BD5FC7D2FE43BCBCB082A1BB943DB \t177F4010FE56CA3336300305F1656F24C74CD1D8        \t430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A \t4D1BB29D63D98E422B2113B19334A25F8507EFA5"     - name: MARIADB_MAJOR      value: "10.3"     - name: MARIADB_VERSION      value: 1:10.3.11+maria~bionic     - name: MYSQL_ROOT_PASSWORD      value: x     image: quay.io/baude/demodb:latest     name: boringkhorana     ports:     - containerPort: 3306      hostPort: 38967      protocol: TCP     resources: {}     securityContext:      allowPrivilegeEscalation: true      privileged: false      readOnlyRootFilesystem: false     tty: true     workingDir: / status: {}&lt;/pre&gt; &lt;p&gt;As you can see, we generated a Kubernetes pod with a single container in it. That container runs the &lt;code&gt;quay.io/baude/demodb:latest&lt;/code&gt; image and retains the same default command.  Let’s now create YAML for each pod and pipe the results to a file for use later.&lt;/p&gt; &lt;pre&gt;$ sudo podman generate kube demodb &amp;#62; /tmp/kube/demodb.yml $ sudo podman generate kube demogen &amp;#62; /tmp/kube/demogen.yml $ sudo podman generate kube demoweb -s &amp;#62; /tmp/kube/demoweb.yml&lt;/pre&gt; &lt;p&gt;Given that we will want to interact with the &lt;code&gt;demoweb&lt;/code&gt; pod and see the live graphing, we are going to generate a service for the &lt;code&gt;demoweb&lt;/code&gt; pod.  This will expose the &lt;code&gt;demoweb&lt;/code&gt; pod to the network using Kubernetes NodePort.&lt;/p&gt; &lt;h3&gt;Creating the pods and service in Kubernetes&lt;/h3&gt; &lt;p&gt;We have captured each Podman pod as YAML and we have a service description too.  We can use these files to create Kubernetes pods using the &lt;code&gt;kubectl&lt;/code&gt; command.&lt;/p&gt; &lt;pre&gt;$ sudo kubectl create -f /tmp/kube/demodb.yml pod/demodb created&lt;/pre&gt; &lt;p&gt;I like for the MariaDB container to be running before creating the rest of the objects.&lt;/p&gt; &lt;pre&gt;$ sudo kubectl get pods NAME     READY   STATUS    RESTARTS   AGE demodb   1/1     Running   0     44s&lt;/pre&gt; &lt;p&gt;Now we can create the rest of the objects including the service.&lt;/p&gt; &lt;pre&gt;$ sudo kubectl create -f /tmp/kube/demogen.yml pod/demogen created $ sudo kubectl create -f /tmp/kube/demoweb.yml pod/demoweb created service/demoweb created&lt;/pre&gt; &lt;p&gt;And we can now see we have three pods running.&lt;/p&gt; &lt;pre&gt;$ sudo kubectl get pods NAME      READY   STATUS    RESTARTS   AGE demodb    1/1     Running   0      2m29s demogen   1/1     Running   0      61s demoweb   1/1     Running   0     42s&lt;/pre&gt; &lt;p&gt;To connect to the live graph, we need to get the Node address for the &lt;code&gt;demoweb&lt;/code&gt; pod and the service’s NodePort assignment.&lt;/p&gt; &lt;pre&gt;$ sudo kubectl describe pod demoweb | grep Node: Node:               minikube/192.168.122.240 $ sudo kubectl get svc NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)     AGE demoweb      NodePort    10.99.237.80   &amp;#60;none&amp;#62;     8050:32272/TCP   12m kubernetes   ClusterIP 10.96.0.1      &amp;#60;none&amp;#62;        443/TCP          23m&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;demoweb&lt;/code&gt; client can be accessed via http://192.168.122.240:32272.&lt;/p&gt; &lt;h2&gt;Local replay with Kubernetes YAML&lt;/h2&gt; &lt;p&gt;You can now also “play” a Kubernetes YAML file in Podman.  We only support running YAML that Podman has generated. This is in part because we cannot realistically implement the entire Kubernetes stack.  Nevertheless, this covers a couple of interesting use cases.&lt;/p&gt; &lt;p&gt;The first use case is having the ability to re-run a local orchestrated set of containers and pods with minimal user input required.  Here, we were thinking about container developers being able repeat a previous container run consistently for things like iterative development.  Within the same context, you could also theoretically be working on one machine and wish to run the same containers and pods on another. The ability to re-&amp;#8220;play&amp;#8221; using Kubernetes YAML solves both.  Enter &lt;code&gt;podman play kube&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ sudo podman play kube --help NAME:   podman play kube - Play a pod based on Kubernetes YAML USAGE:   podman play kube [command options] kubernetes YAML file DESCRIPTION:   Play a Pod and its containers based on a Kubrernetes YAML OPTIONS:   --authfile value             Path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json. Use REGISTRY_AUTH_FILE environment variable to override.   --cert-dir pathname          pathname of a directory containing TLS certificates and keys   --creds credentials          credentials (USERNAME:PASSWORD) to use for authenticating to a registry   --quiet, -q                  Suppress output information when pulling images   --signature-policy pathname  pathname of signature policy file (not usually used)   --tls-verify                 require HTTPS and verify certificates when contacting registries (default: true)&lt;/pre&gt; &lt;p&gt;Suppose we cleaned up after the previous runs of our example application from earlier and we have no existing pods or containers defined.  We could re-create our previous running application with three simple commands using the Kubernetes YAML we generated earlier and the &lt;code&gt;podman play kube&lt;/code&gt; command.  First, we verify that no pods are running:&lt;/p&gt; &lt;pre&gt;$ sudo podman pod ps&lt;/pre&gt; &lt;p&gt;And now using the &lt;code&gt;podman play kube&lt;/code&gt; command, we can deploy pods based on our Kubernetes YAML.&lt;/p&gt; &lt;pre&gt;$ sudo podman play kube /tmp/kube/demodb.yaml 2ff8097fcdc69e4a272a6057ec050a5cb1b872340c31098f23d2e0074a098dbc 4d0e218297156f6d59554ec395ca4651b08d69ab7ca3935ca9f4b2de737cdc14 $ sudo podman play kube /tmp/kube/demogen.yaml 560e4e44e0ae9e43a965ab8da332f3ed89fed1702b4fd14072a5f58a4f133541 bc8c180bfb4616c981f3d1a4c54e1c62ec1a19fb58eacc58040d25a825cbe4e5 $ sudo podman play kube /tmp/kube/demoweb.yaml ae47ad61e0c5a156dd8dbf4d18700138d5de4693eec63c29835daf765399faac f01152a2190da8d54f4090eaf75df54faf74df933404ff7fe38026be7f7f483b&lt;/pre&gt; &lt;pre&gt;$ sudo podman pod ps POD ID         NAME      STATUS    CREATED         # OF CONTAINERS   INFRA ID ae47ad61e0c5   demoweb Running   4 minutes ago 2              57267bfdbaec 560e4e44e0ae   demogen Running   4 minutes ago 2              92b74e53d6d2 2ff8097fcdc6   demodb    Running   4 minutes ago   2     eeaf676e115e&lt;/pre&gt; &lt;p&gt;We have now re-created our containers and pods as they were before, which leads us to another test case. Suppose we want to increase the number of random numbers being generated into the database container by adding two additional containers that generate random numbers.  We can now do this using this:&lt;/p&gt; &lt;pre&gt;$ sudo podman run -dt --pod demogen quay.io/baude/demogen:latest python3 generatenums.py a36adcc653566b130158738f06b1934bee28d0817b4fc1fd7b6d66296c989335 $ sudo podman run -dt --pod demogen quay.io/baude/demogen:latest python3 generatenums.py 8e2b28266595e8c2e46fc872ae3638985f0ce65d0c12b5a4c28359d2cc543ef7&lt;/pre&gt; &lt;pre&gt;$ sudo podman pod ps POD ID         NAME         STATUS    CREATED         # OF CONTAINERS INFRA ID ae47ad61e0c5   demoweb Running   8 minutes ago 2              57267bfdbaec 560e4e44e0ae   demogen Running   8 minutes ago 4              92b74e53d6d2 2ff8097fcdc6   demodb Running   8 minutes ago 2              eeaf676e115e&lt;/pre&gt; &lt;p&gt;As you can see, we have added two additional containers to the &lt;code&gt;demogen&lt;/code&gt; pod.  If we wanted to test this in a Kubernetes environment, we could simply rerun &lt;code&gt;podman generate kube&lt;/code&gt; and regenerate the Kubernetes YAML and redeploy that description in our minikube environment.&lt;/p&gt; &lt;h2&gt;Wrap-up&lt;/h2&gt; &lt;p&gt;As the generated YAML we saw earlier stated, the ability to generate Kubernetes YAML from Podman is still very much under development.  Specifically, certain things like SELinux have not been incorporated yet. As such, so is the ability to replay that same YAML. But the current functionality should start to give Podman users ways to run, rerun, and save their development environments and, more importantly, help provide them the ability to run them in a Kubernetes orchestrated environment.&lt;/p&gt; &lt;h2&gt;More about Podman on the Red Hat Developer Blog&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/"&gt;Podman: Managing pods and containers in a local container runtime&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/"&gt;Managing containerized system services with Podman&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;Podman – The next generation of Linux container tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Intro to Podman (New in Red Hat Enterprise Linux 7.6)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get involved and see how Podman is evolving, be sure to check out the &lt;a href="https://github.com/containers/libpod"&gt;project page&lt;/a&gt; and &lt;a href="https://podman.io/"&gt;podman.io&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#38;linkname=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F29%2Fpodman-kubernetes-yaml%2F&amp;#038;title=Podman%20can%20now%20ease%20the%20transition%20to%20Kubernetes%20and%20CRI-O" data-a2a-url="https://developers.redhat.com/blog/2019/01/29/podman-kubernetes-yaml/" data-a2a-title="Podman can now ease the transition to Kubernetes and CRI-O"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/29/podman-kubernetes-yaml/"&gt;Podman can now ease the transition to Kubernetes and CRI-O&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7pk4RQd9fl4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Configuring Kubernetes is an exercise in defining objects in YAML files.  While not required, it is nice to have an editor that can at least understand YAML, and it&amp;#8217;s even better if it knows the Kubernetes language.  Kubernetes YAML is descriptive and powerful. We love the modeling of the desired state in a declarative language. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/29/podman-kubernetes-yaml/"&gt;Podman can now ease the transition to Kubernetes and CRI-O&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/29/podman-kubernetes-yaml/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">555357</post-id><dc:creator>Brent Baude</dc:creator><dc:date>2019-01-29T13:00:59Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/29/podman-kubernetes-yaml/</feedburner:origLink></entry><entry><title>Enabling CORS in your jBPM Business Application</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KOzTOCe25FY/enabling-cors-in-your-jbpm-business.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-enabling_cors_in_your_jbpm_business_application</id><updated>2019-01-29T07:21:28Z</updated><published>2019-01-29T07:21:00Z</published><content type="html">Currently when you generate your jBPM Business Application (online via &lt;a href="http://start.jbpm.org/"&gt;start.jbpm.org&lt;/a&gt;, command-line via the &lt;a href="https://www.npmjs.com/package/jba-cli"&gt;jba-cli package&lt;/a&gt;, or in Visual Studio code via the&lt;a href="https://marketplace.visualstudio.com/items?itemName=tsurdilovic.jbavsc"&gt; jBPM extension&lt;/a&gt;) your app will have CORS (Cross-origin resource sharing) disabled by default.&lt;br /&gt;&lt;br /&gt;With CORS disabled, if you have a consumer app (e.g. React frontend)&amp;nbsp; which does not live on the same domain as your business app, it will not be able to query its REST api.&lt;br /&gt;&lt;br /&gt;CORS will be enabled by default with the next jBPM community release (7.18.0.Final), see Jira&amp;nbsp;&lt;a href="https://issues.jboss.org/browse/JBPM-8176"&gt;JBPM-8176&lt;/a&gt;, but if you would like to enable this on you own now, it is very easy to do:&lt;br /&gt;&lt;br /&gt;In your generated business app service module edit the&amp;nbsp;DefaultWebSecurityConfig.java file and replace it with the one in&lt;a href="https://gist.github.com/tsurdilo/5ea1c2066fd982d2b360872d977cf3a6"&gt; this Gist&lt;/a&gt;. That's it :)&lt;br /&gt;&lt;br /&gt;With this change in place you will now be able to query your business apps REST api from any domain, for example if you are using jQuery.ajax and want to get your server information (/rest/server endpoint) you could do for example:&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-o9Ix4akKtpc/XE_-kN2uC0I/AAAAAAAAhxE/0zNxJA-49qU_14Q_ifVqhwrV5pftjhbkgCLcBGAs/s1600/Screen%2BShot%2B2019-01-29%2Bat%2B2.19.19%2BAM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="702" data-original-width="1098" height="255" src="https://2.bp.blogspot.com/-o9Ix4akKtpc/XE_-kN2uC0I/AAAAAAAAhxE/0zNxJA-49qU_14Q_ifVqhwrV5pftjhbkgCLcBGAs/s400/Screen%2BShot%2B2019-01-29%2Bat%2B2.19.19%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Sample ajax request to /rest/server&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KOzTOCe25FY" height="1" width="1" alt=""/&gt;</content><summary>Currently when you generate your jBPM Business Application (online via start.jbpm.org, command-line via the jba-cli package, or in Visual Studio code via the jBPM extension) your app will have CORS (Cross-origin resource sharing) disabled by default. With CORS disabled, if you have a consumer app (e.g. React frontend)  which does not live on the same domain as your business app, it will not be abl...</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2019-01-29T07:21:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2019/01/enabling-cors-in-your-jbpm-business.html</feedburner:origLink></entry><entry><title>The new National French PHR (Dossier Médical Partagé) – How does it work? - Part 2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/2pb2U4BSe08/the-new-national-french-phr-dossier_28.html" /><category term="DMP" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossascommunity" scheme="searchisko:content:tags" /><category term="feed_name_cxf_tips" scheme="searchisko:content:tags" /><category term="france" scheme="searchisko:content:tags" /><category term="healthcare" scheme="searchisko:content:tags" /><category term="medical" scheme="searchisko:content:tags" /><category term="PHR" scheme="searchisko:content:tags" /><category term="record" scheme="searchisko:content:tags" /><author><name>fandry</name></author><id>searchisko:content:id:jbossorg_blog-the_new_national_french_phr_dossier_m_dical_partag_how_does_it_work_part_2</id><updated>2019-01-31T14:21:56Z</updated><published>2019-01-28T15:17:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-S_felHywUVQ/XEsgfGq8WrI/AAAAAAAADhs/jD1AO-Cv3TQ1S60NLGTFb2p6Uv3InuepgCLcBGAs/s1600/Keyboard_Pills_DMP.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="378" data-original-width="611" src="https://3.bp.blogspot.com/-S_felHywUVQ/XEsgfGq8WrI/AAAAAAAADhs/jD1AO-Cv3TQ1S60NLGTFb2p6Uv3InuepgCLcBGAs/s1600/Keyboard_Pills_DMP.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;In &lt;a href="http://fandry.blogspot.com/2019/01/the-new-national-french-phr-dossier.html"&gt;my preview post&lt;/a&gt;, I was describing how to create a record into the new National French PHR (Dossier Médical Partagé).&lt;br /&gt;In this article, I will explore the content of the DMP and discuss the potential challenges of adding new data to it.&lt;br /&gt;&lt;br /&gt;First &lt;a href="https://www.dmp.fr/"&gt;I log&amp;nbsp;with my credentials&lt;/a&gt; (login and password) and provide a 2 factor authentication 6 digits number sent to me either by email of SMS.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://www.dmp.fr/"&gt;My DMP&lt;/a&gt; contains several tabs:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;RÉCAPITULATIF &lt;/b&gt;(summary)&lt;/li&gt;&lt;li&gt;&lt;b&gt;DOCUMENTS &lt;/b&gt;(documents)&lt;/li&gt;&lt;li&gt;&lt;b&gt;MES INFORMATIONS &lt;/b&gt;(my informations)&lt;/li&gt;&lt;li&gt;&lt;b&gt;GESTION DU DMP&lt;/b&gt; (record management)&lt;/li&gt;&lt;li&gt;&lt;b&gt;HISTORIQUE DES ACCÈS&lt;/b&gt; (Access log)&lt;/li&gt;&lt;/ul&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-IxSPTNIeeVo/XE8LOTubIlI/AAAAAAAADiU/Wm6kh72AM3oRCbZbLpussNlZOWDXNT69gCEwYBhgL/s1600/DMP_1_recapitulatif.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="672" data-original-width="939" src="https://4.bp.blogspot.com/-IxSPTNIeeVo/XE8LOTubIlI/AAAAAAAADiU/Wm6kh72AM3oRCbZbLpussNlZOWDXNT69gCEwYBhgL/s1600/DMP_1_recapitulatif.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Let's start by trying to add manually a document. For this, I have two options:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Typing a document&lt;/li&gt;&lt;li&gt;Adding a file&lt;/li&gt;&lt;/ul&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-EXg3rYUgN2Q/XE8N5ljB2uI/AAAAAAAADic/Iojj5-AGgu4QLV-65F7-CUFoXmxVmArCgCLcBGAs/s1600/DMP_1_recapitulatif_add_document.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="255" data-original-width="866" src="https://3.bp.blogspot.com/-EXg3rYUgN2Q/XE8N5ljB2uI/AAAAAAAADic/Iojj5-AGgu4QLV-65F7-CUFoXmxVmArCgCLcBGAs/s1600/DMP_1_recapitulatif_add_document.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Writing a document:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-v7Ot8p8yG2k/XE8ScFRU59I/AAAAAAAADio/OcfMlDB7kgQ3cliAi-sHefbwVmFA2baSACLcBGAs/s1600/DMP_1_recapitulatif_add_document_typing.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="634" data-original-width="907" src="https://4.bp.blogspot.com/-v7Ot8p8yG2k/XE8ScFRU59I/AAAAAAAADio/OcfMlDB7kgQ3cliAi-sHefbwVmFA2baSACLcBGAs/s1600/DMP_1_recapitulatif_add_document_typing.png" /&gt;&lt;/a&gt;&lt;a href="https://4.bp.blogspot.com/-v7Ot8p8yG2k/XE8ScFRU59I/AAAAAAAADio/OcfMlDB7kgQ3cliAi-sHefbwVmFA2baSACLcBGAs/s1600/DMP_1_recapitulatif_add_document_typing.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;br /&gt;&lt;/a&gt;&lt;a href="https://4.bp.blogspot.com/-v7Ot8p8yG2k/XE8ScFRU59I/AAAAAAAADio/OcfMlDB7kgQ3cliAi-sHefbwVmFA2baSACLcBGAs/s1600/DMP_1_recapitulatif_add_document_typing.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;br /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Adding a file:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-poPQBhyJGNE/XE8TAe5rDwI/AAAAAAAADiw/sN_75LKFPmYKU9QFdh-BaCpjuiwj0_qQgCLcBGAs/s1600/DMP_1_recapitulatif_add_document_file.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="488" data-original-width="938" src="https://2.bp.blogspot.com/-poPQBhyJGNE/XE8TAe5rDwI/AAAAAAAADiw/sN_75LKFPmYKU9QFdh-BaCpjuiwj0_qQgCLcBGAs/s1600/DMP_1_recapitulatif_add_document_file.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Coming back to the main &lt;b&gt;documents tab&lt;/b&gt;, we can see that it can potentially contain &lt;b&gt;various types&lt;/b&gt; of healthcare related documents:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote style="border-image: none; border: currentColor; margin: 0px 0px 0px 40px; padding: 0px;"&gt;&lt;br /&gt;&lt;li style="text-align: left;"&gt;&lt;b&gt;Synthèses (s&lt;/b&gt;yntheses)&lt;/li&gt;&lt;/blockquote&gt;&lt;blockquote style="border-image: none; border: currentColor; margin: 0px 0px 0px 40px; padding: 0px;"&gt;&lt;br /&gt;&lt;li style="text-align: left;"&gt;&lt;b&gt;Traitements et soins (t&lt;/b&gt;reatments and care)&lt;/li&gt;&lt;/blockquote&gt;&lt;blockquote style="border-image: none; border: currentColor; margin: 0px 0px 0px 40px; padding: 0px;"&gt;&lt;br /&gt;&lt;li style="text-align: left;"&gt;&lt;b&gt;Compte-rendus&lt;/b&gt; (reports)&amp;nbsp;&lt;/li&gt;&lt;/blockquote&gt;&lt;blockquote style="border-image: none; border: currentColor; margin: 0px 0px 0px 40px; padding: 0px;"&gt;&lt;br /&gt;&lt;li style="text-align: left;"&gt;&lt;b&gt;Imagerie médicale&lt;/b&gt; (medical imagerie)&amp;nbsp;&lt;/li&gt;&lt;/blockquote&gt;&lt;blockquote style="border-image: none; border: currentColor; margin: 0px 0px 0px 40px; padding: 0px;"&gt;&lt;br /&gt;&lt;li style="text-align: left;"&gt;&lt;b&gt;Biologie&lt;/b&gt; (biology / Lab results)&amp;nbsp;&lt;/li&gt;&lt;/blockquote&gt;&lt;blockquote style="border-image: none; border: currentColor; margin: 0px 0px 0px 40px; padding: 0px;"&gt;&lt;br /&gt;&lt;li style="text-align: left;"&gt;&lt;b&gt;Prévention &lt;/b&gt;(prevention)&lt;/li&gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-i0l33b0sneE/XE8EC8X8ZAI/AAAAAAAADiE/NpLCz0YYXdkggg7tEg5fhoYpnJrZyMSfgCLcBGAs/s1600/DMP_1_small.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="598" data-original-width="1008" src="https://1.bp.blogspot.com/-i0l33b0sneE/XE8EC8X8ZAI/AAAAAAAADiE/NpLCz0YYXdkggg7tEg5fhoYpnJrZyMSfgCLcBGAs/s1600/DMP_1_small.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;This page has a search section:&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-9eir_b1t1XU/XE8VaBAq7aI/AAAAAAAADi8/N-jP7OqSebMm5HMzJDZNgZ60JgM3esy0gCLcBGAs/s1600/DMP_1_documents_search.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="190" data-original-width="947" src="https://2.bp.blogspot.com/-9eir_b1t1XU/XE8VaBAq7aI/AAAAAAAADi8/N-jP7OqSebMm5HMzJDZNgZ60JgM3esy0gCLcBGAs/s1600/DMP_1_documents_search.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The &lt;b&gt;document section&lt;/b&gt; itself &lt;b&gt;can be expanded&lt;/b&gt; according to very precise &lt;b&gt;documents sub-types&lt;/b&gt;:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b style="font-weight: bold;"&gt;Synthèses&lt;/b&gt; (syntheses)&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b style="font-weight: bold;"&gt;Synthèse&lt;/b&gt; (synthesis)&lt;/li&gt;&lt;li&gt;&lt;b style="font-weight: bold;"&gt;Synthèse d'épisode de soins&lt;/b&gt; (summary episode of care)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Traitements et soins&lt;/span&gt; (treatments and care)&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;CR ou fiche de suivi de soins par auxiliaire médical &lt;/b&gt;(report or medical assistant care follow-up card)&lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Dispensation médicamenteuse &lt;/span&gt;(Drug dispensing)&lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Dispensation autre&amp;nbsp;&lt;/span&gt;(Dispensation other)&lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Plan personnalisé de soins &lt;/span&gt;(Personalized care plan)&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Prescription de médicaments &lt;/span&gt;(Prescription of drugs)&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Prescription de soins &lt;/span&gt;(Prescription of care)&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Prescription autre&amp;nbsp;&lt;/span&gt;(Prescription other)&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;Protocole de soins affection longue durée (ALD) &lt;/span&gt;(Long-term care protocol)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Comptes-rendus&lt;/b&gt; (reports)&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;CR d'accouchement &lt;/b&gt;(delivery report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR d'acte diagnostique&lt;/b&gt; (diagnostic act report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR d'acte thérapeutique&lt;/b&gt; (therapeutic act report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR d'admission&lt;/b&gt; (admission report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR d'anesthésie&lt;/b&gt; (reports of anesthesia)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR de bilan d'évaluation de la perte d'autonomie&lt;/b&gt; (assessment report reports of loss of autonomy)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR de bilan fonctionnel par auxiliaire médical&lt;/b&gt; (reports of functional assessment by medical auxiliary)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR de consultation pré-anesthésique&lt;/b&gt; (pre-anesthetic consultation report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR de passage aux urgences&lt;/b&gt; (emergency room report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR de réunion de concertation pluridisciplinaire&lt;/b&gt; (tumor board report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR de télé-médecine&lt;/b&gt; (telemedicine report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR séjour hospitalier&lt;/b&gt; (report of hospital stay)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR opératoire&lt;/b&gt; (surgery report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;CR ou fiche de consultation ou de visite &lt;/b&gt;(visit report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Lettre de liaison à la sortie d'un établissement de soins&lt;/b&gt; (Liaison letter exit of a care facility)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Imagerie médicale&lt;/b&gt; (medical imaging)&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;CR d'imagerie médicale&lt;/b&gt; (medical imaging report)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Document encapsulant une image d'illustration non DICOM&lt;/b&gt; (document including a non-DICOM image)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Biologie &lt;/b&gt;(biology)&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp; &lt;b&gt;CR d'anatomie et de cytologie pathologiques&lt;/b&gt; (anatomy and pathological cytology report)&lt;/li&gt;&lt;li&gt;&amp;nbsp; &lt;b&gt;CR d'examens biologiques&lt;/b&gt; (biological examination report)&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;b&gt;Prévention &lt;/b&gt;(Prevention)&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&amp;nbsp; &lt;b&gt;CR d'acte diagnostique à visée préventive ou de dépistage &lt;/b&gt;(report of diagnostic act)&lt;/li&gt;&lt;li&gt;&amp;nbsp; &lt;b&gt;CR d'acte thérapeutique à visée préventive&lt;/b&gt; (Preventive action report)&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;Now lets looks at the type of data I have in my record. These have been &lt;b&gt;pushed&lt;/b&gt; into my DMP by the&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Health_care_in_France"&gt;French national health insurance&lt;/a&gt; (Caisse d'Assurance maladie) accessible via my account &lt;a href="https://www.ameli.fr/"&gt;AMELI&lt;/a&gt; (Assurance Maladie En LIgne). Each patient in France has one unique &lt;a href="https://en.wikipedia.org/wiki/INSEE_code"&gt;INSEE number&lt;/a&gt;&amp;nbsp;used for &lt;b&gt;healthcare tracking&lt;/b&gt; (children use their parents accounts) and other administrative purpose. Supplemental coverage is also usually provided by private mutual insurers.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So far it is not clear to me whether they provide any additional information to my record.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;A warning indicates that &lt;i&gt;&lt;b&gt;&lt;span style="color: #38761d;"&gt;the displayed data is a reflection of information from reimbursement or support held by health insurance organizations mandatory for the last 24 months. They are provided for information purposes only and exhaustiveness can not be guaranteed, especially in the event of an administrative change during these 24 months&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;There are &lt;b&gt;5 possible sections&lt;/b&gt; (In my case the section &lt;b&gt;hospitalization &lt;/b&gt;is empty).&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;Pharmacie / fournitures&lt;/b&gt; (Pharmacy and various supplies - e.g. optician / glasses)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Hospitalisation&lt;/b&gt; (Hospitalization)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Soins médicaux et dentaires&lt;/b&gt; (Medical and dental care)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Radiologie&lt;/b&gt; (Radiology)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Biologie&lt;/b&gt; (Biology)&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Here is how these sections look like (data has been modified/changed for obvious privacy concern).&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Let's start with the &lt;i&gt;&lt;b&gt;Pharmacy and Medical Supplies&lt;/b&gt;&lt;/i&gt; section:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-X0L3ucSgKXs/XFFp-XGaBCI/AAAAAAAADjQ/QdMoc07cvLogM3Pq013G0xdNagKLOAElgCEwYBhgL/s1600/DMP_1_doc_Pharmacy_Glasses.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="237" data-original-width="802" src="https://3.bp.blogspot.com/-X0L3ucSgKXs/XFFp-XGaBCI/AAAAAAAADjQ/QdMoc07cvLogM3Pq013G0xdNagKLOAElgCEwYBhgL/s1600/DMP_1_doc_Pharmacy_Glasses.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The section &lt;i&gt;&lt;b&gt;Medical and Dental Care&lt;/b&gt;&lt;/i&gt;&amp;nbsp;includes medical care including &lt;b&gt;PCP&lt;/b&gt;, &lt;b&gt;physiotherapist&lt;/b&gt;, &lt;b&gt;nurse&lt;/b&gt;, &lt;b&gt;dentist&lt;/b&gt;, &lt;b&gt;dermatologist&lt;/b&gt;,&amp;nbsp; &lt;b&gt;ophthalmologist &lt;/b&gt;visits:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-2ijN0vPxtMU/XFFuKNAULII/AAAAAAAADjc/qJXpxB1v6-8sl_DXYNExM1aj7hSBLS0xgCEwYBhgL/s1600/DMP_1_doc_Dental_other.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="253" data-original-width="804" src="https://2.bp.blogspot.com/-2ijN0vPxtMU/XFFuKNAULII/AAAAAAAADjc/qJXpxB1v6-8sl_DXYNExM1aj7hSBLS0xgCEwYBhgL/s1600/DMP_1_doc_Dental_other.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;The section &lt;i&gt;&lt;b&gt;Radiology &lt;/b&gt;&lt;/i&gt;includes &lt;b&gt;body &lt;/b&gt;and &lt;b&gt;dental &lt;/b&gt;scans:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-ZwiGU7sChCI/XFF_WFVa-JI/AAAAAAAADjo/eRe406dk1dYEb2tOAGgWzKv0HpYQGR4bgCLcBGAs/s1600/DMP_1_doc_Radiology.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="186" data-original-width="813" src="https://4.bp.blogspot.com/-ZwiGU7sChCI/XFF_WFVa-JI/AAAAAAAADjo/eRe406dk1dYEb2tOAGgWzKv0HpYQGR4bgCLcBGAs/s1600/DMP_1_doc_Radiology.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;La section&amp;nbsp;&lt;i&gt;&lt;b&gt;Biology&amp;nbsp;&lt;/b&gt;&lt;/i&gt;includes&amp;nbsp;Labs data (only dates, coding act and types, not the results themselves):&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-0FlNIYU5Qzc/XFK14RKNl-I/AAAAAAAADkQ/W5Twnjucky8D28KknFPXjRH1QeUQODUsACEwYBhgL/s1600/DMP_1_doc_Biology.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="225" data-original-width="803" src="https://1.bp.blogspot.com/-0FlNIYU5Qzc/XFK14RKNl-I/AAAAAAAADkQ/W5Twnjucky8D28KknFPXjRH1QeUQODUsACEwYBhgL/s1600/DMP_1_doc_Biology.png" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To sum-up my data is &lt;b&gt;well organized&lt;/b&gt;&amp;nbsp;and&amp;nbsp;&lt;b&gt;easy to access&lt;/b&gt;. However &lt;b&gt;only the payer information is available&lt;/b&gt; (French national insurance)&amp;nbsp; which is not very different from what I could obtain directly from my&amp;nbsp;&lt;a href="https://www.ameli.fr/"&gt;AMELI&lt;/a&gt;&amp;nbsp;account (Assurance Maladie En LIgne). There is &lt;b&gt;no useful clinical information&lt;/b&gt; that I could share with healthcare professionals, expect perhaps if &lt;b&gt;I had manually entered&lt;/b&gt; &lt;b&gt;some of the information myself&lt;/b&gt;. For example, I could have added my lab results from the paper report I had received from the labs or manually added over-the-counter drugs.&lt;br /&gt;&lt;br /&gt;In my next post I will look at &lt;b&gt;other features of my DMP&lt;/b&gt; such a &lt;b&gt;consent&lt;/b&gt;, &lt;b&gt;trusted people&lt;/b&gt; and &lt;b&gt;organ donation&lt;/b&gt; options.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/TechnologyHighlights/~4/kLbjx8Evz94" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/2pb2U4BSe08" height="1" width="1" alt=""/&gt;</content><summary>In my preview post, I was describing how to create a record into the new National French PHR (Dossier Médical Partagé). In this article, I will explore the content of the DMP and discuss the potential challenges of adding new data to it. First I log with my credentials (login and password) and provide a 2 factor authentication 6 digits number sent to me either by email of SMS. My DMP contains seve...</summary><dc:creator>fandry</dc:creator><dc:date>2019-01-28T15:17:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/TechnologyHighlights/~3/kLbjx8Evz94/the-new-national-french-phr-dossier_28.html</feedburner:origLink></entry><entry><title>Streamline your JBoss EAP dev environment with Red Hat CodeReady Workspaces: Part 2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rvJ58MQrhR4/" /><category term="Cloud" /><category term="CodeReady Workspaces" /><category term="Developer Tools" /><category term="Modern App Dev" /><category term="Red Hat JBoss Enterprise Application Platform" /><category term="Red Hat OpenShift Container Platform" /><category term="App Dev" /><category term="cloud native development" /><category term="development environment" /><category term="Eclipse Che" /><category term="IDE" /><category term="Red Hat Enterprise Application Platform" /><category term="Red Hat JBoss EAP" /><category term="Red Hat OpenShift" /><author><name>Laurent Broudoux</name></author><id>https://developers.redhat.com/blog/?p=554117</id><updated>2019-01-28T13:00:21Z</updated><published>2019-01-28T13:00:21Z</published><content type="html">&lt;p&gt;This is the second half of my series covering how to use &lt;a href="https://developers.redhat.com/blog/2018/12/11/codeready-workspaces-openshift/"&gt;Red Hat CodeReady Workspaces&lt;/a&gt; to develop a &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java Enterprise Edition&lt;/a&gt; (now Jakarta EE) application using &lt;a href="https://developers.redhat.com/products/eap/overview/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt; (JBoss EAP) in the cloud on &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt;/&lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. In the &lt;a href="https://developers.redhat.com/blog/2019/01/21/codeready-workspaces-streamline-jboss-eap-development/"&gt;first part&lt;/a&gt;, we saw how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bring your own tools by extending Red Hat&amp;#8217;s provided stacks&lt;/li&gt; &lt;li&gt;Register your own stack within Red Hat CodeReady Workspaces&lt;/li&gt; &lt;li&gt;Create your workspace using your stack and embedding your JEE project located on a Git repository&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For this second part, we&amp;#8217;ll start configuring the workspace by adding some helpful settings and commands for building and running a JBoss EAP project. We&amp;#8217;ll then see how to use the local JBoss EAP instance for deploying and debugging our application. Finally, we&amp;#8217;ll create a factory so that we&amp;#8217;ll be able to share our work and propose an on-demand configured development environment for anyone that needs to collaborate on our project.&lt;/p&gt; &lt;p&gt;&lt;span id="more-554117"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Configuring your JBoss EAP workspace&lt;/h2&gt; &lt;p&gt;In the previous article, we ended up with a workspace that was configured for Java but with some missing dependencies. An extra step is usually necessary: indicate that you’re dealing with a Maven project. This has to be done only once by the user that set up the workspace. For that, go to &lt;em&gt;Project&lt;/em&gt; &amp;#62; &lt;em&gt;Update Project Configuration&lt;/em&gt; and enable &lt;em&gt;Maven&lt;/em&gt; under the &lt;em&gt;JAVA&lt;/em&gt; section. Once that is done, an additional &lt;em&gt;External Libraries&lt;/em&gt; item appears in your project tree. You can now open Java files and play around with code navigation, Java completion, and so on.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-maven.png"&gt;&lt;img class=" aligncenter wp-image-554147 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-maven-1024x674.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-maven-1024x674.png" alt="External Libraries" width="640" height="421" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-maven-1024x674.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-maven-300x198.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-maven-768x506.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You should now be able to launch your first build command. Open the &lt;em&gt;Commands Palette&lt;/em&gt; using &lt;em&gt;Run&lt;/em&gt; &amp;#62; &lt;em&gt;Commands Palette&lt;/em&gt; or the &lt;code&gt;Shift+F10&lt;/code&gt; shortcut. You’ll see the &lt;code&gt;build&lt;/code&gt; command was defined when you created the workspace and you may double-click it to run it.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-commands.png"&gt;&lt;img class=" aligncenter wp-image-554137 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-commands-1024x627.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-commands-1024x627.png" alt="Build command" width="640" height="392" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-commands-1024x627.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-commands-300x184.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-commands-768x470.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-commands.png 1222w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;After a few seconds, you’ll see the successful build in the &lt;code&gt;build&lt;/code&gt; command&amp;#8217;s dedicated console.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-build.png"&gt;&lt;img class=" aligncenter wp-image-554157 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-build-1024x223.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-build-1024x223.png" alt="Build command's console window" width="640" height="139" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-build-1024x223.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-build-300x65.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-build-768x168.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Nice! You can now start modifying code and do some refactoring. We’re able to edit code, compile it, and package it, but let&amp;#8217;s see how to test it locally within our JBoss EAP instance.&lt;/p&gt; &lt;h3&gt;Adding some JBoss EAP commands&lt;/h3&gt; &lt;p&gt;Let&amp;#8217;s start by adding a new command for starting the JBoss EAP instance that is included within our stack image. Looking just above the project tree view, you’ll find an icon on the right that allows you to open the commands management view. You’ll see that commands are categorized into &lt;em&gt;BUILD&lt;/em&gt;, &lt;em&gt;TEST&lt;/em&gt;, &lt;em&gt;RUN&lt;/em&gt;, &lt;em&gt;DEBUG&lt;/em&gt;, &lt;em&gt;DEPLOY,&lt;/em&gt; and &lt;em&gt;COMMON&lt;/em&gt; goals. In the &lt;em&gt;RUN&lt;/em&gt; section, create a new &lt;em&gt;Custom&lt;/em&gt; command that you’ll call &lt;code&gt;start-eap&lt;/code&gt; and add the command below:&lt;/p&gt; &lt;pre&gt;export JAVA_OPTS= &amp;#38;&amp;#38; export JAVA_OPTS_APPEND=-Dsun.util.logging.disableCallerCheck=true &amp;#38;&amp;#38; \ /opt/eap/bin/standalone.sh -b 0.0.0.0&lt;/pre&gt; &lt;p&gt;You can now launch this command through the &lt;em&gt;Command Palette&lt;/em&gt; or through the &lt;em&gt;Run&lt;/em&gt; blue arrow on the menu bar. The command is executed in its own console and you should see output like the following indicating that your JBoss EAP 7.1 instance is up and running.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crm-workspace-start-eap.png"&gt;&lt;img class=" aligncenter wp-image-554167 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crm-workspace-start-eap-1024x674.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crm-workspace-start-eap-1024x674.png" alt="JBoss EAP 7.1 instance is up and running" width="640" height="421" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crm-workspace-start-eap-1024x674.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crm-workspace-start-eap-300x198.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crm-workspace-start-eap-768x506.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now let’s deploy our application to the running instance. For that, let’s create a new command within the &lt;em&gt;DEPLOY&lt;/em&gt; section and call it &lt;code&gt;copy-war&lt;/code&gt;. Add the command below and execute it.&lt;/p&gt; &lt;pre&gt;cp /projects/openshift-tasks/target/openshift-tasks.war /opt/eap/standalone/deployments/ROOT.war&lt;/pre&gt; &lt;p&gt;This enables the previously built WAR archive to be deployed to our JBoss EAP instance&amp;#8217;s deployments folder. The instance should now hot-deploy it in a few seconds. You may now want to check your application and play with it. Just right of the command console, click the + button and choose &lt;em&gt;Servers&lt;/em&gt;. This will open a new view displaying the URL corresponding to the different servers attached to your workspaces. Remember the &lt;code&gt;eap&lt;/code&gt; server we declared in the stack configuration? This information is used by Red Hat CodeReady Workspaces to create a new OpenShift route that allows you to access your deployed application!&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-servers.png"&gt;&lt;img class=" aligncenter wp-image-554177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-servers-1024x674.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-servers-1024x674.png" alt="Accessing the deployed application" width="640" height="421" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-servers-1024x674.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-servers-300x198.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-servers-768x506.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Just copy and paste the URL into your browser and you should see our test application live.&lt;/p&gt; &lt;p&gt;For now, we just have created simple commands deploying a packaged WAR but you can also call some commands allowing you to work using an exploded directory structure and hot-reload of JSP and static resources. For example, I use the following &lt;code&gt;build-dev&lt;/code&gt; command for initializing a directory structure within the deployment folder of the JBoss EAP instance:&lt;/p&gt; &lt;pre&gt;mvn clean package -f ${current.project.path}/pom.xml &amp;#38;&amp;#38; \ mkdir /opt/eap/standalone/deployments/ROOT.war &amp;#38;&amp;#38; \ cp -R ${current.project.path}/target/openshift-tasks/* /opt/eap/standalone/deployments/ROOT.war/ &amp;#38;&amp;#38; \ touch /opt/eap/standalone/deployments/ROOT.war.dodeploy&lt;/pre&gt; &lt;p&gt;And I use the following &lt;code&gt;update-dev&lt;/code&gt; command to just refresh this directory and force a re-deploy of the application:&lt;/p&gt; &lt;pre&gt;mvn -DskipTests package -f ${current.project.path}/pom.xml &amp;#38;&amp;#38; \ cp -R ${current.project.path}/target/openshift-tasks/* /opt/eap/standalone/deployments/ROOT.war/ &amp;#38;&amp;#38; \ touch /opt/eap/standalone/deployments/ROOT.war.dodeploy&lt;/pre&gt; &lt;h3&gt;Debugging&lt;/h3&gt; &lt;p&gt;Red Hat CodeReady Workspace tooling can also be used for debugging your application. In order to do that, create a new command as usual within the &lt;em&gt;DEBUG&lt;/em&gt; section. Let’s call it &lt;code&gt;start-eap-debug&lt;/code&gt; and just put there the following command, including the debug flag and the port &lt;code&gt;8000&lt;/code&gt; we have used within our stack definition:&lt;/p&gt; &lt;pre&gt;export JAVA_OPTS= &amp;#38;&amp;#38; export JAVA_OPTS_APPEND=-Dsun.util.logging.disableCallerCheck=true &amp;#38;&amp;#38; \ /opt/eap/bin/standalone.sh -b 0.0.0.0 --debug 8000&lt;/pre&gt; &lt;p&gt;Now start the JBoss EAP instance using the debug mode. Before starting it up again, you may want to stop the running instance: you can achieve that by looking for the &lt;code&gt;start-eap&lt;/code&gt; running process in the top &lt;em&gt;EXEC&lt;/em&gt; menu bar and clicking the blue square. Your instance is now launched in debug mode and you have to launch a debug session within the IDE. Before doing so, remember that the &lt;em&gt;Edit Debug Configurations &lt;/em&gt;item in the &lt;em&gt;Run&lt;/em&gt; menu lets you configure a connection to a remote JBoss EAP instance using port &lt;code&gt;8000&lt;/code&gt;, as shown below.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-config.png"&gt;&lt;img class=" aligncenter wp-image-554187 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-config-1024x665.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-config-1024x665.png" alt="Debug configuration" width="640" height="416" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-config-1024x665.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-config-300x195.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-config-768x499.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-config.png 1598w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can now start a debug session through the &lt;em&gt;Run&lt;/em&gt; &amp;#62; &lt;em&gt;Debug&lt;/em&gt; &amp;#62; &lt;em&gt;Remote EAP&lt;/em&gt; menu item. The IDE connects to &lt;code&gt;localhost:8000&lt;/code&gt; and switches to the debug perspective. You can now open some Java class like &lt;code&gt;/src/main/com/openshift/service/DemoResource.java&lt;/code&gt; file. Click on line 44 to place a breakpoint. Now go to the browser tab hosting your app and click the &lt;code&gt;Log Info&lt;/code&gt; button; you should see the debug session starting in the workspace and filling up the &lt;em&gt;Frames&lt;/em&gt; and &lt;em&gt;Variables&lt;/em&gt; panels.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug.png"&gt;&lt;img class=" aligncenter wp-image-554197 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-1024x674.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-1024x674.png" alt="Frames and Variables panels" width="640" height="421" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-1024x674.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-300x198.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-workspace-debug-768x506.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Sharing your work with a factory&lt;/h3&gt; &lt;p&gt;Setting up everything was not that hard but it takes a little time and can be error-prone. Red Hat CodeReady Workspaces offers the concept of a &lt;em&gt;factory&lt;/em&gt; in order to be able to reproduce and duplicate a workspace configuration. Using factories, you can easily onboard new collaborators for your project by making everything available with a single click!&lt;/p&gt; &lt;p&gt;Let’s create a factory for our workspace. From the Red Hat CodeReady Workspace dashboard, choose the &lt;em&gt;Factories&lt;/em&gt; menu item on the left vertical menu, and then give your factory a name and select the Workspace you want to use as a basis. Choose &lt;em&gt;CREATE&lt;/em&gt; and then explore the factory properties in the detail screen:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-new.png"&gt;&lt;img class=" aligncenter wp-image-554207 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-new-1024x666.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-new-1024x666.png" alt="Factory properties" width="640" height="416" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-new-1024x666.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-new-300x195.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-new-768x499.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The most important attributes of a factory are its URLs, which can be used for launching a new workspace embedding all the configuration and commands we added to the original workspace. A URL may be combined with nice badges to offer instant access for any &lt;code&gt;README&lt;/code&gt; or wiki page.&lt;/p&gt; &lt;p&gt;&lt;img src="https://che.openshift.io/factory/resources/factory-contribute.svg" /&gt;&lt;/p&gt; &lt;p&gt;Just copy and paste one of the URLs into a browser tab or click a badge and you’ll see this nice crane animation building your own workspace on demand, allowing you to quickly starting collaboration on a new project.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-startup.png"&gt;&lt;img class=" aligncenter wp-image-554217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-startup-1024x628.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-startup-1024x628.png" alt="Building a workspace" width="640" height="393" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-startup-1024x628.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-startup-300x184.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/01/crw-factory-startup-768x471.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now that your collaborator’s workspace is up and running, she can start coding and easily contributing pull requests to your original source code repository. But I’ll leave that topic for a later article.&lt;/p&gt; &lt;h2&gt;Get started!&lt;/h2&gt; &lt;p&gt;We have seen through this tour how Red Hat CodeReady Workspaces allow you to configure a development environment and easily replicate and distribute it among your organization. The embedded cloud/browser-based IDE provides everything you need to start quickly collaborating on projects while providing you security through centralization of source code and authentication of access. Red Hat CodeReady Workspaces gives you greater security and faster onboarding, and it ensures your code works on all your developers&amp;#8217; machines too.&lt;/p&gt; &lt;p&gt;Best of all, it’s easy to sign up for the beta. &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt;Visit the product page&lt;/a&gt; to get the code and everything you need to know about the product.&lt;/p&gt; &lt;h2&gt;See also:&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/01/21/codeready-workspaces-streamline-jboss-eap-development/"&gt;Streamline your JBoss EAP dev environment with Red Hat CodeReady Workspaces: Part 1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/11/codeready-workspaces-openshift/"&gt;CodeReady Workspaces for OpenShift (Beta) – It works on their machines too&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/18/eclipse-che-7-coming-part-1/" rel="bookmark"&gt;Eclipse Che 7 is Coming and It’s Really Hot (1/4)&lt;/a&gt;&lt;/h2&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;pre&gt;&lt;/pre&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#38;linkname=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F01%2F28%2Fcodeready-workspaces-streamline-jboss-eap-development-part2%2F&amp;#038;title=Streamline%20your%20JBoss%20EAP%20dev%20environment%20with%20Red%20Hat%20CodeReady%20Workspaces%3A%20Part%202" data-a2a-url="https://developers.redhat.com/blog/2019/01/28/codeready-workspaces-streamline-jboss-eap-development-part2/" data-a2a-title="Streamline your JBoss EAP dev environment with Red Hat CodeReady Workspaces: Part 2"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/28/codeready-workspaces-streamline-jboss-eap-development-part2/"&gt;Streamline your JBoss EAP dev environment with Red Hat CodeReady Workspaces: Part 2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rvJ58MQrhR4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;This is the second half of my series covering how to use Red Hat CodeReady Workspaces to develop a Java Enterprise Edition (now Jakarta EE) application using Red Hat JBoss Enterprise Application Platform (JBoss EAP) in the cloud on Red Hat OpenShift/Kubernetes. In the first part, we saw how to: Bring your own tools by extending [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/01/28/codeready-workspaces-streamline-jboss-eap-development-part2/"&gt;Streamline your JBoss EAP dev environment with Red Hat CodeReady Workspaces: Part 2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/01/28/codeready-workspaces-streamline-jboss-eap-development-part2/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">554117</post-id><dc:creator>Laurent Broudoux</dc:creator><dc:date>2019-01-28T13:00:21Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/01/28/codeready-workspaces-streamline-jboss-eap-development-part2/</feedburner:origLink></entry><entry><title>10.0.0.Alpha3 and 9.4.6.Final</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ap-t5C-ue2k/1000alpha3-and-946final.html" /><category term="alpha" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Tristan Tarrant</name></author><id>searchisko:content:id:jbossorg_blog-10_0_0_alpha3_and_9_4_6_final</id><updated>2019-01-28T09:35:15Z</updated><published>2019-01-28T09:35:00Z</published><content type="html">Hey there,&lt;br /&gt;&lt;br /&gt;the Infinispan team has cooked two releases for you today:&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;10.0.0.Alpha3&lt;/h4&gt;This release contains 3 features:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;[ISPN-4075] - State transfer should preserve the creation timestamp of entries&lt;/li&gt;&lt;li&gt;[ISPN-9320] - Automatic hot rod client version selection&lt;/li&gt;&lt;li&gt;[ISPN-9625] - Make clustered locks configuration possible by XML&lt;/li&gt;&lt;li&gt;[ISPN-9771] - Support for configuration in JSON format&lt;/li&gt;&lt;/ul&gt;We've also started removing code which was deprecated in the past, so check the &lt;a href="http://infinispan.org/docs/dev/upgrading/upgrading.html" target="_blank"&gt;upgrading document&lt;/a&gt; to see what you need to adapt in your application. This document will receive further changes during the 10.0 cycle.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12339174" target="_blank"&gt;The complete list of issues resolved in 10.0.0.Alpha3.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Some other features are in the works and should be landing during the beta period. Check the &lt;a href="https://blog.infinispan.org/2018/11/the-road-to-infinispan-10-alpha1.html" target="_blank"&gt;first of the alpha posts&lt;/a&gt; to learn more about the new stuff.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;9.4.6.Final&lt;/h4&gt;The stabilization of 9.4 continues with this micro release.&lt;br /&gt;&lt;br /&gt;Highlights are:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;[ISPN-7889] - BaseDistributionInterceptor.remoteGet may cause concurrency issues&lt;br /&gt;[ISPN-8889] - Data race in NonTxInvocationContext&lt;/li&gt;&lt;li&gt;[ISPN-9873] - Remove listeners when the lock is removed&lt;/li&gt;&lt;li&gt;[ISPN-9822] - BasicComponentRegistryImpl fails with security manager&lt;/li&gt;&lt;li&gt;[ISPN-9819] - Improve Spring-Session events handling in remote and embedded &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12340282" target="_blank"&gt;The complete list of issues resolved in 9.4.6.Final.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Please report any issues in our &lt;a href="https://issues.jboss.org/browse/ISPN" target="_blank"&gt;issue tracker&lt;/a&gt; and join the conversation in our &lt;a href="https://infinispan.zulipchat.com/" target="_blank"&gt;Zulip Chat&lt;/a&gt; to shape up our next release.&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/Xz40Tj1_rdw" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ap-t5C-ue2k" height="1" width="1" alt=""/&gt;</content><summary>Hey there, the Infinispan team has cooked two releases for you today: 10.0.0.Alpha3This release contains 3 features: [ISPN-4075] - State transfer should preserve the creation timestamp of entries [ISPN-9320] - Automatic hot rod client version selection [ISPN-9625] - Make clustered locks configuration possible by XML [ISPN-9771] - Support for configuration in JSON formatWe've also started removing ...</summary><dc:creator>Tristan Tarrant</dc:creator><dc:date>2019-01-28T09:35:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/Xz40Tj1_rdw/1000alpha3-and-946final.html</feedburner:origLink></entry></feed>
